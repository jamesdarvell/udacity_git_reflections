When would you want to use a remote repository rather than keeping all your work local?
  If I was collaborating with others
  Also, I would use this as a backup
  I would use this as a way to build a portfolio

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?
   Because I may need to manually resolve merge conflicts
   Because I can understand all of the upline changes and why they were made
   in the context of the code that I am working on

Describe the differences between forks, clones, and branches. When would you
use one instead of another?
   Branch
      A different version of the project within a repo, for instance, an
      experimental version or a new feature.

      I would use this if i were adding a new feature or fixing a bug

   Clone
      A copy of an existing repo
      I would use this when collaborating, or if I were using another project
      as a starting point for a new one.

   Fork
      A copy of a github repo, itself hosted on Github
      
      I would use this if I wanted to modify an open source project for my own
      use.
What is the benefit of having a copy of the last known state of the remote
stored locally?
   I can diff it against commits in my repository to review changes I have
   made

   Git can use it to tell me when the remote repo has changed.

How would you collaborate without using Git or GitHub? What would be easier,
and what would be harder?
   I could use email or a ftp folder, and automate backups on the folder.

   It would be easier to remember how to modify files as there would be no vcs
   commands to remember to use.

   However, there would be many potential clashes and conflicts with document
   changes that would ultimately cause serious problems.

When would you want to make changes in a separate branch rather than directly
in master? What benefits does each approach have?
   When I am working on a different feature from the other team members, I can
   keep the commit history cleaner by working on a seperate branch from the
   rest of the team and using pull requests to get the feature included once
   it is ready.
